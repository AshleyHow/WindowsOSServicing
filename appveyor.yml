skip_commits:
  files:
    - "**/*.md"
    - "**/*.png"
    - "**/*LICENCE"

image: Windows

install:
- ps: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Install-Module Pester -Force
- pwsh: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Install-Module Pester -Force

build: off

test_script:
- ps: |
      Import-Module -Name "Pester" -Force
      Import-Module -Name "C:\projects\windowsosservicing"
      $psd1Path = "C:\projects\windowsosservicing\WindowsOSServicing.psd1"
      $psm1Path = "C:\projects\windowsosservicing\WindowsOSServicing.psm1"
      Get-AuthenticodeSignature -FilePath $psd1Path | Select-Object *
      Get-AuthenticodeSignature -FilePath $psm1Path | Select-Object *
      $testResultsFile = ".\TestsResults_PS.xml"
      $ResultsPS = Invoke-Pester -Show All -Verbose -PassThru | Tee-Object -FilePath $testResultsFile
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
      If ($ResultsPS.FailedCount -gt 0) {
          throw "$($res.FailedCount) tests failed."
      }
- pwsh: |
      Import-Module -Name "Pester" -Force
      Import-Module -Name "C:\projects\windowsosservicing"
      $testResultsFile = ".\TestsResults_PWSH.xml"
      $ResultsPWSH = Invoke-Pester -Show All -Verbose -PassThru | Tee-Object -FilePath $testResultsFile
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
      If ($ResultsPWSH.FailedCount -gt 0) {
          throw "$($res.FailedCount) tests failed."
      }
